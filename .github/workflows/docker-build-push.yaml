name: Build and push a container image
on:
  workflow_call:
    inputs:
      ecr_repository:
        description: "The container registry to which the built image will be pushed."
        required: true
        type: string
      ecr_region:
        description: "AWS region in which the container registry is kept."
        required: false
        default: "us-west-2"
        type: string
      image_tags:
        description: "A space-separated list of additional container image tags to apply."
        required: false
        default: ""
        type: string
      dockerfile_name:
        description: "Dockefile to use"
        required: false
        default: "Dockerfile"
        type: string
      github_user:
        description: "Github username, for downloading private dependencies"
        required: false
        default: "socotrajenkins"
        type: string
      arch:
        description: "A space-separated list of architectures for which to build images."
        required: false
        default: "X64"
        type: string

    secrets:
      aws_access_key_id:
        description: "The AWS access key ID for authenticating to the ECR."
        required: true
      aws_secret_access_key:
        description: "The AWS secret access key for authenticating to the ECR."
        required: true
      our_github_token:
        description: "Github API token, for downloading private dependencies"
    outputs:
      unique_tag:
        description: "An auto-generated container image tag that is unique for every run."
        value: ${{ jobs.main.outputs.unique_tag }}
      sanitized_branch:
        description: "The branch being build, but with '/' replaced with '-'."
        value: ${{ jobs.main.outputs.sanitized_branch }}

jobs:
  setup:
    runs-on: [self-hosted, linux, X64]
    outputs:
      arches: ${{ fromJSON(steps.arches.outputs) }}
    steps:
    - uses: jungwinter/split@v2
      id: arches
      with:
        msg: ${{ inputs.arch }}
  main:
    needs: setup
    strategy:
      matrix:
        arch: ${{ jobs.setup.outputs.arches.outputs }}
    runs-on: [self-hosted, linux, ${{ matrix.arch }}]
    outputs:
      unique_tag: ${{ steps.gen-tag.outputs.unique }}
      sanitized_branch: ${{ steps.gen-tag.outputs.sanitized_branch }}
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.aws_access_key_id }}
        aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
        aws-region: ${{ inputs.ecr_region }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build container image
      env:
        DOCKER_BUILDKIT: 1
      run: |
        docker build \
          -t ${{ inputs.ecr_repository }}:${{ github.sha }} \
          --build-arg GITHUB_USER=${{ inputs.github_user }} \
          --build-arg GITHUB_APITOKEN=${{ secrets.our_github_token }} \
          -f ${{ inputs.dockerfile_name }} .
    - name: Generate unique tag
      id: gen-tag
      run: |
        echo '::echo::on'
        branch_prefix=$(echo ${{ github.ref_name }} | sed 's/\//-/g')
        commit_short=$(echo ${{ github.sha }} | cut -b 1-8)
        unique_tag="${branch_prefix}-${{ github.run_number }}-${{ github.run_attempt }}-${commit_short}"
        echo "unique=$unique_tag" >>$GITHUB_OUTPUT
        echo "sanitized_branch=$branch_prefix" >>$GITHUB_OUTPUT
    - name: Tag and push container image
      env:
        ECR_REGISTRY: 936926373655.dkr.ecr.us-west-2.amazonaws.com
      run: |
        for tag in ${{ steps.gen-tag.outputs.unique }} ${{ inputs.image_tags }}; do
          tag_arch="${tag}-${{ matrix.arch }}"
          docker tag ${{ inputs.ecr_repository }}:${{ github.sha }} ${ECR_REGISTRY}/${{ inputs.ecr_repository }}:$tag_arch
          docker push ${ECR_REGISTRY}/${{ inputs.ecr_repository }}:$tag_arch
        done
